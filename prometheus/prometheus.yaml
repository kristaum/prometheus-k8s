apiVersion: v1
kind: Service
metadata:
  labels:
    app: prometheus
  name: prometheus
  namespace: monitoring
spec:
  ports:
    - port: 9090
      protocol: TCP
      targetPort: http-prometheus
      name: http-prometheus
  selector:
    statefulset.kubernetes.io/pod-name: prometheus-0
  type: NodePort
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus
spec:
  serviceName: "prometheus"
  replicas: 1
  selector:
    matchLabels:
      k8s-app: prometheus
  template:
    metadata:
      labels:
        k8s-app: prometheus
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 2000
        runAsNonRoot: true
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: quay.io/prometheus/prometheus:v2.9.2
        args:
          - --config.file=/etc/prometheus/prometheus.yaml
          - --storage.tsdb.path=/var/prometheus
          - --web.enable-lifecycle
          - --storage.tsdb.retention.time=25d
          - --web.enable-admin-api
        ports:
          - name: http-prometheus
            containerPort: 9090
        volumeMounts:
          - name: config-prometheus
            mountPath: /etc/prometheus
          - name: rules
            mountPath: /etc/prometheus/rules
          - name: prometheus-storage
            mountPath: /var/prometheus
      - name: prometheus-configmap-reload
        image: "jimmidyson/configmap-reload:v0.1"
        args:
          - --volume-dir=/etc/prometheus/rules
          - --webhook-url=http://localhost:9090/-/reload
        volumeMounts:
          - name: rules
            mountPath: /etc/prometheus/rules
        resources:
          limits:
            cpu: 200m
            memory: 10Mi
          requests:
            cpu: 200m
            memory: 10Mi
      volumes:
        - name: config-prometheus
          configMap:
            name: prometheus
        - name: rules
          configMap:
            name: prometheus-rules
        - name: prometheus-storage
          emptyDir: {}
  updateStrategy:
    type: RollingUpdate
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: ["", "extensions", "apps"]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  - pods/proxy
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  - secrets
  verbs: ["get"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: monitoring
